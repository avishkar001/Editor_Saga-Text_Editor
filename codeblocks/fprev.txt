
// If not present, inserts key into trie
// If the key is prefix of trie node, just marks leaf node
void insert(struct TrieNode *root, const char *key)
{
        int level;
        int length = strlen(key);
        int index;
     
        struct TrieNode *pCrawl = root;

        for (level = 0; level < length; level++)
        {
               index = CHAR_TO_INDEX(key[level]);
               if (!pCrawl->children[index])
                       pCrawl->children[index] = getNode();

               pCrawl = pCrawl->children[index];
        }

        // mark last node as leaf
        //pCrawl->isEndOfWord = true;
}


abc
bbb
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
ddddddddddd
eeeeeeeeeeeeeeeeeeeeeee
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
g
hhhhhhhhhhhhhhhhhhhhhh
// This file is part of the Doxygen Developer Manual
/** @page tasks Pending and Open Tasks

This page lists pending and open tasks being considered or worked upon
by the OpenOCD community.

@section thelist The List
